rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Profiles collection - TEMPORARY PUBLIC READ FOR DEBUGGING
    // WARNING: This is not secure for production.
    match /profiles/{userId} {
      allow read: if true; // Temporarily allow public read access
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Curriculum collections (phases, modules, lessons, quizzes, quiz_questions)
    // Public read access for all curriculum content.
    // Only users with 'admin' role can create, update, or delete these documents.
    match /{collection=phases|modules|lessons|quizzes|quiz_questions}/{docId} {
      allow read: if true; // Public read access for curriculum content

      // Admin write access: check if the authenticated user's profile role is 'admin'
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Student Progress collection
    // Users can read, create, and update their own student progress.
    // The 'user_id' field in the document must match the authenticated user's UID.
    match /student_progress/{progressId} {
      allow read, create, update: if request.auth != null && request.auth.uid == resource.data.user_id;
      allow delete: if request.auth != null && request.auth.uid == resource.data.user_id;
    }

    // Quiz Attempts collection
    // Users can read, create, and update their own quiz attempts.
    // The 'user_id' field in the document must match the authenticated user's UID.
    match /quiz_attempts/{attemptId} {
      allow read, create, update: if request.auth != null && request.auth.uid == resource.data.user_id;
      allow delete: if request.auth != null && request.auth.uid == resource.data.user_id;
    }
  }
}