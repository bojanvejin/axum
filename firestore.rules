rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if the user has an 'admin' role in their profile.
    function hasAdminRole() {
      // Check for auth existence first to prevent errors on unauthenticated requests.
      return request.auth != null &&
             exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Rules for Collections ---

    // Profiles Collection
    match /profiles/{userId} {
      // A user can create their own profile.
      allow create: if request.auth.uid == userId;
      // A user can get their own profile document. This is required for hasAdminRole() to work.
      allow get: if request.auth.uid == userId;
      // Admins can list, get, update, and delete any profile.
      allow list, update, delete: if hasAdminRole();
    }

    // Curriculum Collections (Phases, Modules, Lessons, Quizzes, Questions)
    // These are publicly readable but writable only by admins.
    match /phases/{docId} { allow read: if true; allow write: if hasAdminRole(); }
    match /modules/{docId} { allow read: if true; allow write: if hasAdminRole(); }
    match /lessons/{docId} { allow read: if true; allow write: if hasAdminRole(); }
    match /quizzes/{docId} { allow read: if true; allow write: if hasAdminRole(); }
    match /quiz_questions/{docId} { allow read: if true; allow write: if hasAdminRole(); }

    // Student Data Collections
    match /student_progress/{progressId} {
      // A user can read, create, and update their own progress records.
      allow read, create, update: if request.auth.uid == resource.data.user_id;
      // Admins can read and delete any progress record.
      allow read, delete: if hasAdminRole();
    }

    match /quiz_attempts/{attemptId} {
      // A user can read and create their own quiz attempts.
      allow read, create: if request.auth.uid == resource.data.user_id;
      // Admins can read, update, and delete any quiz attempt.
      allow read, update, delete: if hasAdminRole();
    }
  }
}