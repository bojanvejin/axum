rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the currently authenticated user has an 'admin' role.
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Profiles: Any authenticated user can read profiles. Only the owner can write to their own profile.
    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Curriculum Collections (Phases, Modules, Lessons, Quizzes, Questions)
    // Any authenticated user can read the curriculum. Only admins can create, update, or delete it.
    match /phases/{phaseId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /modules/{moduleId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /lessons/{lessonId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /quiz_questions/{questionId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // User-Specific Data (Progress, Attempts)
    // Users can only create, read, and update their own documents in these collections.
    match /student_progress/{progressId} {
      allow read, write: if request.auth.uid == resource.data.user_id;
      allow create: if request.auth.uid == request.resource.data.user_id;
    }

    match /quiz_attempts/{attemptId} {
      allow read, write: if request.auth.uid == resource.data.user_id;
      allow create: if request.auth.uid == request.resource.data.user_id;
    }
  }
}